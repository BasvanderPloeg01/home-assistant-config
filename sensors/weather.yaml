#
# Dark Sky weather
#
# @link https://home-assistant.io/components/sensor.darksky/
#
- platform: darksky
  api_key: !secret darksky_api_key
  forecast:
    - 1
    - 2
  monitored_conditions:
    - summary
    - icon
    - nearest_storm_distance
    - uv_index
    - ozone
    - minutely_summary
    - hourly_summary
    - daily_summary
    - temperature_max
    - temperature_min
    - apparent_temperature_max
    - apparent_temperature_min
    - humidity
    - dew_point
    - wind_speed
    - wind_bearing
    - apparent_temperature
    - temperature
    - precip_type
    - precip_intensity
    - precip_probability


#
# Outside temperature and humidity
#
# Information is rounded to integers, because decimal points here are not useful
# for human consumption ...and because the hyper-local temperature is likely off
# by a few degrees anyway. This isn't a laboratory after all!
#
- platform: template
  sensors:
    outside_temperature:
      friendly_name: Temperature
      icon_template: mdi:thermometer
      unit_of_measurement: '°C'
      value_template: >-
        {{ states('sensor.dark_sky_temperature') | round(0) }}

    outside_humidity:
      friendly_name: Humidity
      icon_template: mdi:water-percent
      unit_of_measurement: '%'
      value_template: >-
        {{ states('sensor.dark_sky_humidity') | round(0) }}


#
# Friedly weather report
#
# These add "Feels like X˚" to the apparent reading if any, to make this data
# easier to consume.
#
- platform: template
  sensors:
    feels_like:
      friendly_name: Feels Like
      value_template: >-
        {% set temperature = states('sensor.outside_temperature') %}
        {% set apparent = states('sensor.dark_sky_apparent_temperature') | round(0) %}

        {% if apparent != temperature %}
          Feels like {{ apparent }}˚
        {% endif %}

    feels_like_1:
      friendly_name: Feels Like
      value_template: >-
        {% set temperature = states('sensor.dark_sky_daily_high_temperature_1') %}
        {% set apparent = states('sensor.dark_sky_daily_high_apparent_temperature_1') | round(0) %}

        {% if apparent != temperature %}
          Will feel like {{ apparent }}˚
        {% endif %}

    feels_like_2:
      friendly_name: Feels Like
      value_template: >-
        {% set temperature = states('sensor.dark_sky_daily_high_temperature_2') %}
        {% set apparent = states('sensor.dark_sky_daily_high_apparent_temperature_2') | round(0) %}

        {% if apparent != temperature %}
          Will feel like {{ apparent }}˚
        {% endif %}

    weather_summary:
      friendly_name: Weather Summary
      value_template: >-
        {{ states('sensor.dark_sky_temperature') | round(0) }}˚ {{ states('sensor.dark_sky_summary') }}.

    weather_details:
      friendly_name: Weather Details
      value_template: >-
        {% set temperature = states('sensor.dark_sky_temperature') | round(0) %}
        {% set apparent = states('sensor.dark_sky_apparent_temperature') | round(0) %}
        {% set summary = states('sensor.dark_sky_minutely_summary') %}

        {% if summary == 'unknown' %}
          {% set summary = '' %}
        {% endif %}

        {% if apparent != temperature %}
          Feels like {{ apparent }}˚. {{ summary }}
        {% else %}
          {{ summary }}
        {% endif %}


#
# Chances of precipitation
#
# These templates improve the reading comprehension about the chances of rain.
#
# @see /appdaemon/dashboards/Weather.dash
#
- platform: template
  sensors:
    precip_probability:
      friendly_name: Probability of Precipitation
      value_template: >-
        {% set precip = states('sensor.dark_sky_precip_probability') | int %}

        {% if precip > 0 %}
          {{ precip }} %
        {% else %}
          —
        {% endif %}

    precip_probability_friendly:
      friendly_name: Probability of Precipitation
      value_template: >-
        {% set precip = states('sensor.dark_sky_precip_probability') | int %}

        {% if precip > 0 %}
          precip: {{ precip }} %
        {% else %}
          no precipitation
        {% endif %}

    precip_probability_1:
      friendly_name: Probability of Precipitation
      value_template: >-
        {% set precip = states('sensor.dark_sky_precip_probability_1') | int %}

        {% if precip > 0 %}
          {{ precip }} %
        {% else %}
          —
        {% endif %}

    precip_probability_friendly_1:
      friendly_name: Probability of Precipitation
      value_template: >-
        {% set precip = states('sensor.dark_sky_precip_probability_1') | int %}

        {% if precip > 0 %}
          precip: {{ precip }} %
        {% else %}
          no precipitation
        {% endif %}

    precip_probability_2:
      friendly_name: Probability of Precipitation
      value_template: >-
        {% set precip = states('sensor.dark_sky_precip_probability_2') | int %}

        {% if precip > 0 %}
          {{ precip }} %
        {% else %}
          —
        {% endif %}

    precip_probability_friendly_2:
      friendly_name: Probability of Precipitation
      value_template: >-
        {% set precip = states('sensor.dark_sky_precip_probability_2') | int %}

        {% if precip > 0 %}
          precip: {{ precip }} %
        {% else %}
          no precipitation
        {% endif %}


#
# Friendly low temperatures
#
# Makes temperature readings easier to understand by rounding them and adding
# strings.
#
# @see /appdaemon/dashboards/Weather.dash
#
- platform: template
  sensors:
    weather_low:
      friendly_name: Low Temperature
      value_template: >-
        {{ states('sensor.dark_sky_daily_low_temperature') | round }}

    weather_low_friendly:
      friendly_name: Low Temperature
      value_template: >-
        {% set temp = states('sensor.dark_sky_daily_low_temperature') | round %}

        min: {{ temp }}˚

    weather_low_1:
      friendly_name: Low Temperature
      value_template: >-
        {{ states('sensor.dark_sky_daily_low_temperature_1') | round }}

    weather_low_1_friendly:
      friendly_name: Low Temperature
      value_template: >-
        {% set temp = states('sensor.dark_sky_daily_low_temperature_1') | round %}

        min: {{ temp }}˚

    weather_low_2:
      friendly_name: Low Temperature
      value_template: >-
        {{ states('sensor.dark_sky_daily_low_temperature_2') | round }}

    weather_low_2_friendly:
      friendly_name: Low Temperature
      value_template: >-
        {% set temp = states('sensor.dark_sky_daily_low_temperature_2') | round %}

        min: {{ temp }}˚


#
# Friendly icon equivalents
#
# Turns icon names into words.
#
- platform: template
  sensors:
    weather_icon_friendly:
      friendly_name: Weather
      value_template: >-
        {% set icon = states('sensor.dark_sky_icon') %}

        {% if icon == 'clear-day' or icon == 'clear-night' %}
          Clear
        {% elif icon == 'rain' %}
          Rain
        {% elif icon == 'rain' %}
          Rain
        {% elif icon == 'snow' %}
          Snow
        {% elif icon == 'sleet' %}
          Sleet
        {% elif icon == 'wind' %}
          Windy
        {% elif icon == 'fog' %}
          Fog
        {% elif icon == 'cloudy' %}
          Cloudy
        {% elif icon == 'partly-cloudy-day' or icon == 'partly-cloudy-night' %}
          Partly Cloudy
        {% endif %}

    weather_icon_friendly_1:
      friendly_name: Weather 1
      value_template: >-
        {% set icon = states('sensor.dark_sky_icon_1') %}

        {% if icon == 'clear-day' or icon == 'clear-night' %}
          Clear
        {% elif icon == 'rain' %}
          Rain
        {% elif icon == 'rain' %}
          Rain
        {% elif icon == 'snow' %}
          Snow
        {% elif icon == 'sleet' %}
          Sleet
        {% elif icon == 'wind' %}
          Windy
        {% elif icon == 'fog' %}
          Fog
        {% elif icon == 'cloudy' %}
          Cloudy
        {% elif icon == 'partly-cloudy-day' or icon == 'partly-cloudy-night' %}
          Partly Cloudy
        {% endif %}

    weather_icon_friendly_2:
      friendly_name: Weather 2
      value_template: >-
        {% set icon = states('sensor.dark_sky_icon_2') %}

        {% if icon == 'clear-day' or icon == 'clear-night' %}
          Clear
        {% elif icon == 'rain' %}
          Rain
        {% elif icon == 'rain' %}
          Rain
        {% elif icon == 'snow' %}
          Snow
        {% elif icon == 'sleet' %}
          Sleet
        {% elif icon == 'wind' %}
          Windy
        {% elif icon == 'fog' %}
          Fog
        {% elif icon == 'cloudy' %}
          Cloudy
        {% elif icon == 'partly-cloudy-day' or icon == 'partly-cloudy-night' %}
          Partly Cloudy
        {% endif %}


#
# Wind speed
#
# The default readings of meters per second is precise, but isn't something
# common mortals use in everyday life. Give me kilometers and wind strenght,
# now *that* I can relate to!
#
# @see /customize.yaml
#
# @link https://en.wikipedia.org/wiki/Beaufort_scale
#
- platform: template
  sensors:
    wind_speed:
      friendly_name: Wind Speed
      unit_of_measurement: 'km/h'
      friendly_name_template: >-
        {{ states('sensor.wind_scale_friendly') }}
      value_template: >-
        {{ (states('sensor.dark_sky_wind_speed')|float * 3600 / 1000) | round(0) }}
      icon_template: >-
        {% set speed = (states('sensor.dark_sky_wind_speed')|float * 3600 / 1000) | round(0) %}

        {% if 39 <= speed %}
          mdi:weather-windy
        {% else %}
          mdi:airballoon
        {% endif %}

    wind_scale_friendly:
      friendly_name: Wind Scale
      value_template: >-
        {% set speed = (states('sensor.dark_sky_wind_speed')|float * 3600 / 1000) | round(0) %}

        {% if speed < 1 %}
          Calm
        {% elif 1 <= speed <= 5 %}
          Light air
        {% elif 6 <= speed <= 11 %}
          Light breeze
        {% elif 12 <= speed <= 19 %}
          Gentle breeze
        {% elif 20 <= speed <= 28 %}
          Moderate breeze
        {% elif 29 <= speed <= 38 %}
          Fresh breeze
        {% elif 39 <= speed <= 49 %}
          Strong breeze
        {% elif 50 <= speed <= 61 %}
          High wind
        {% elif 62 <= speed <= 74 %}
          Fresh gale
        {% elif 75 <= speed <= 88 %}
          Strong gale
        {% elif 89 <= speed <= 102 %}
          Storm
        {% elif 103 <= speed <= 117 %}
          Violent storm
        {% elif 118 <= speed %}
          Hurricane force
        {% endif %}
      icon_template: >-
        {% set speed = (states('sensor.dark_sky_wind_speed')|float * 3600 / 1000) | round(1) %}

        {% if 40 <= speed %}
          mdi:weather-windy
        {% else %}
          mdi:airballoon
        {% endif %}


#
# Wind direction
#
# Wind provenance in degrees is great for computers, but pointless for humans.
# Cardinal points make more sense to humans.
#
# @see /customize.yaml
#
# @link http://www.themethodology.net/2013/12/how-to-convert-degrees-to-cardinal.html
# @link https://stackoverflow.com/questions/7490660/converting-wind-direction-in-angles-to-text-words
#
- platform: template
  sensors:
    wind_bearing_cardinal:
      friendly_name: Wind Bearing
      value_template: >-
        {% set degrees = states('sensor.dark_sky_wind_bearing') | int %}
        {% set val = (degrees / 45) | int %}
        {% set directions = ["N", "NE", "E", "SE", "S", "SW", "W", "NW"] %}

        {{ directions[(val % 8)] }}

    wind_bearing_cardinal_friendly:
      friendly_name: Wind Bearing
      value_template: >-
        {% set degrees = states('sensor.dark_sky_wind_bearing') | int %}
        {% set val = (degrees / 45) | int %}
        {% set directions = [
          "North",
          "Northeast",
          "East",
          "Southeast",
          "South",
          "Southwest",
          "West",
          "Northwest"
        ] %}

        {{ directions[(val % 8)] }}

    wind_bearing_cardinal_16:
      friendly_name: Wind Bearing
      value_template: >-
        {% set degrees = states('sensor.dark_sky_wind_bearing') | int %}
        {% set val = (degrees / 22.5 + 0.5) | int %}
        {% set directions = ["N", "NNE", "NE", "ENE", "E", "ESE", "SE", "SSE", "S", "SSW", "SW", "WSW", "W", "WNW", "NW", "NNW"] %}

        {{ directions[(val % 16)] }}

    wind_bearing_cardinal_16_friendly:
      friendly_name: Wind Bearing
      value_template: >-
        {% set degrees = states('sensor.dark_sky_wind_bearing') | int %}
        {% set val = (degrees / 22.5 + 0.5) | int %}
        {% set directions = [
          "North",
          "North-Northeast",
          "Northeast",
          "East-Northeast",
          "East",
          "East-Southeast",
          "Southeast",
          "South-Southeast",
          "South",
          "South-Southwest",
          "Southwest",
          "West-Southwest",
          "West",
          "West-Northwest",
          "Northwest",
          "North-Northwest"
        ] %}

        {{ directions[(val % 16)] }}
