# Moon phases
- platform: moon

# Time & Date
- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'time_date'

# Templates
- platform: template
  sensors:
    date_friendly:
      friendly_name: Date
      icon_template: mdi:calendar
      entity_id:
        - sensor.date
      value_template: >-
        {% set weekday = now().strftime('%A') %}
        {% set month = now().strftime('%b') %}
        {% set day = now().strftime('%d') | int %}
        {%
          set suffix = "st" if (day % 10 == 1 and day != 11)
          else "nd" if (day % 10 == 2 and day != 12)
          else "rd" if (day % 10 == 3 and day != 13)
          else "th"
        %}

        {{ weekday }}, {{ month }} {{ day }}{{ suffix }}

# Number of days in a month
- platform: template
  sensors:
    days_in_month:
      friendly_name: Days in month
      icon_template: mdi:calendar
      entity_id:
        - sensor.date
      value_template: >-
        {% set month = now().month %}
        {% set year = now().year %}
        {% set days = 31 if month in [1,3,5,7,8,10,12]
          else 30 if month in [4,6,9,11]
          else 29 if as_timestamp(strptime(year|string + '-02-29', "%Y-%m-%d"))
          else 28
        %}

        {{ days }}

# Number of days left this month
- platform: template
  sensors:
    days_remaining_in_month:
      friendly_name: Days remaining in month
      icon_template: mdi:calendar
      entity_id:
        - sensor.date
      value_template: >-
        {% set days_in_month = states.sensor.days_in_month.state|int %}

        {{ days_in_month - now().day }}

# Report on the next sun event (risings or settings)
- platform: template
  sensors:
    sun_state:
      friendly_name: Sun
      entity_id:
        - sun.sun
      icon_template: >-
        {% if is_state('sun.sun', 'above_horizon') %}
          mdi:weather-sunny
        {% else %}
          mdi:weather-night
        {% endif %}
      value_template: >-
        {% if is_state('sun.sun', 'above_horizon') %}
          sets at {% set timestamp = as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom("%H:%M") %} {{ timestamp.lstrip("0") }}
        {% else %}
          rises at {% set timestamp = as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom("%H:%M") %} {{ timestamp.lstrip("0") }}
        {% endif %}

