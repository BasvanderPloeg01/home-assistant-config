#
# Bedroom climate
#
# Calibration offsets (set through Zwave configuration panel):
#   Humidity: +6.0% (0+6 = 6)
#   Temperature: -2.4°C (256-24 = 232 = 0xE8 -> +0x01 = 0xE801 = 59393 -> -65536 = -6143)
#
# @link https://www.tabsoverspaces.com/233657-calibrating-aeotec-multisensor-6s-temperature-using-openzwave-in-domoticz/
#
- platform: template
  sensors:
    bedroom_humidity_exact:
      friendly_name: Bedroom Humidity Exact
      unit_of_measurement: '%'
      icon_template: mdi:water-percent
      value_template: "{{ states('sensor.bedroom_multisensor_relative_humidity') | round(1) }}"

    bedroom_humidity:
      friendly_name: Bedroom Humidity
      unit_of_measurement: '%'
      icon_template: mdi:water-percent
      value_template: "{{ states('sensor.bedroom_multisensor_relative_humidity') | round }}"

    bedroom_temperature_exact:
      friendly_name: Bedroom Temperature Exact
      unit_of_measurement: '°C'
      icon_template: mdi:thermometer
      value_template: "{{ states('sensor.bedroom_multisensor_temperature') }}"

    bedroom_temperature:
      friendly_name: Bedroom Temperature
      unit_of_measurement: '°C'
      icon_template: mdi:thermometer
      value_template: "{{ states('sensor.bedroom_multisensor_temperature') | round }}"

    bedroom_luminance:
      friendly_name: Bedroom Luminance
      unit_of_measurement: 'lx'
      icon_template: mdi:blur
      value_template: "{{ states('sensor.bedroom_multisensor_luminance') | round }}"

    bedroom_luminance_friendly:
      friendly_name: Bedroom Luminance
      icon_template: mdi:blur
      value_template: >-
        {% set lx = states('sensor.bedroom_multisensor_luminance') | int(-1) %}

        {% if lx < 0 %}
          unknown
        {% elif 0 <= lx <= 10 %}
          Dark
        {% elif 11 <= lx <= 400 %}
          Dim
        {% elif 401 <= lx <= 1000 %}
          Normal
        {% elif 1001 <= lx <= 5000 %}
          Bright
        {% elif 5001 <= lx %}
          Outdoors
        {% else %}
          N/A
        {% endif %}

- platform: filter
  name: Bedroom Humidity Filtered
  entity_id: sensor.bedroom_humidity_exact
  filters:
    - filter: outlier
      window_size: 4
      radius: 4.0
    - filter: lowpass
      time_constant: 10
      precision: 1

- platform: filter
  name: Bedroom Temperature Filtered
  entity_id: sensor.bedroom_temperature_exact
  filters:
    - filter: outlier
      window_size: 4
      radius: 2.0
    - filter: lowpass
      time_constant: 10
    - filter: time_simple_moving_average
      window_size: 00:05
      precision: 2


#
# Humidor climate
#
# Calibration offsets:
#   Humidity: -0.5%
#   Temperature: 0.2°C
#
- platform: mqtt
  name: Humidor AcuRite
  state_topic: "home/Acurite_tower_sensor/11846"

- platform: mqtt
  name: Humidor Humidity Exact
  state_topic: "home/Acurite_tower_sensor/11846"
  unit_of_measurement: '%'
  value_template: >-
    {% set calibration = -0.5 %}
    {% set humidity = value_json.humidity %}

    {{ humidity + calibration }}

- platform: mqtt
  name: Humidor Temperature Exact
  state_topic: "home/Acurite_tower_sensor/11846"
  unit_of_measurement: '°C'
  value_template: >-
    {% set calibration = 0.2 %}
    {% set temperature = value_json.temperature_C %}

    {{ (temperature + calibration) | round(1) }}

- platform: template
  sensors:
    humidor_humidity:
      friendly_name: Humidor Humidity
      unit_of_measurement: '%'
      icon_template: mdi:water-percent
      value_template: "{{ states('sensor.humidor_humidity_exact') | round }}"

    humidor_temperature:
      friendly_name: Humidor Humidity
      unit_of_measurement: '°C'
      icon_template: mdi:thermometer
      value_template: "{{ states('sensor.humidor_temperature_exact') | round }}"

- platform: filter
  name: Humidor Humidity Filtered
  entity_id: sensor.humidor_humidity_exact
  filters:
    - filter: outlier
      window_size: 4
      radius: 4.0
    - filter: lowpass
      time_constant: 10
      precision: 1

- platform: filter
  name: Humidor Temperature Filtered
  entity_id: sensor.humidor_temperature_exact
  filters:
    - filter: outlier
      window_size: 4
      radius: 2.0
    - filter: lowpass
      time_constant: 10
    - filter: time_simple_moving_average
      window_size: 00:05
      precision: 2


#
# Lounge climate
#
# Calibration offsets (set through Zwave configuration panel):
#   Humidity: +3.7% (0+4 = 4)
#   Temperature: -0.8°C (256-8 = 248 = 0xF8 -> +0x01 = 0xF801 = 63489 -> -65536 = -2047)
#
# @link https://www.tabsoverspaces.com/233657-calibrating-aeotec-multisensor-6s-temperature-using-openzwave-in-domoticz/
# @link https://docs.microsoft.com/en-us/windows/desktop/sensorsapi/understanding-and-interpreting-lux-values
#
- platform: template
  sensors:
    lounge_humidity_exact:
      friendly_name: Lounge Humidity Exact
      unit_of_measurement: '%'
      icon_template: mdi:water-percent
      value_template: "{{ states('sensor.lounge_multisensor_relative_humidity') }}"

    lounge_humidity:
      friendly_name: Lounge Humidity
      unit_of_measurement: '%'
      icon_template: mdi:water-percent
      value_template: "{{ states('sensor.lounge_humidity_exact') | round }}"

    lounge_temperature_exact:
      friendly_name: Lounge Temperature Exact
      unit_of_measurement: '°C'
      icon_template: mdi:thermometer
      value_template: "{{ states('sensor.lounge_multisensor_temperature') }}"

    lounge_temperature:
      friendly_name: Lounge Temperature
      unit_of_measurement: '°C'
      icon_template: mdi:thermometer
      value_template: "{{ states('sensor.lounge_temperature_exact') | round }}"

    lounge_luminance:
      friendly_name: Lounge Luminance
      unit_of_measurement: 'lx'
      icon_template: mdi:blur
      value_template: "{{ states('sensor.lounge_multisensor_luminance') | round }}"

    lounge_luminance_friendly:
      friendly_name: Lounge Luminance
      icon_template: mdi:blur
      value_template: >-
        {% set lx = states('sensor.lounge_multisensor_luminance') | int(-1) %}

        {% if lx < 0 %}
          unknown
        {% elif 0 <= lx <= 10 %}
          Dark
        {% elif 11 <= lx <= 400 %}
          Dim
        {% elif 401 <= lx <= 1000 %}
          Normal
        {% elif 1001 <= lx <= 5000 %}
          Bright
        {% elif 5001 <= lx %}
          Outdoors
        {% else %}
          N/A
        {% endif %}

- platform: filter
  name: Lounge Humidity Filtered
  entity_id: sensor.lounge_humidity_exact
  filters:
    - filter: outlier
      window_size: 4
      radius: 4.0
    - filter: lowpass
      time_constant: 10
      precision: 1

- platform: filter
  name: Lounge Temperature Filtered
  entity_id: sensor.lounge_temperature_exact
  filters:
    - filter: outlier
      window_size: 4
      radius: 2.0
    - filter: lowpass
      time_constant: 10
    - filter: time_simple_moving_average
      window_size: 00:05
      precision: 2


#
# Washroom climate
#
# Calibration offsets (set through Zwave configuration panel):
#   Humidity: +2.0% (0+2 = 2)
#   Temperature: -1.3°C (256-13 = 243 = 0xF3 -> +0x01 = 0xF301 = 62209 -> -65536 = -3327)
#
# @link https://www.tabsoverspaces.com/233657-calibrating-aeotec-multisensor-6s-temperature-using-openzwave-in-domoticz/
#
- platform: template
  sensors:
    washroom_humidity_exact:
      friendly_name: Washroom Humidity Exact
      unit_of_measurement: '%'
      icon_template: mdi:water-percent
      value_template: "{{ states('sensor.washroom_multisensor_relative_humidity') }}"

    washroom_humidity:
      friendly_name: Washroom Humidity
      unit_of_measurement: '%'
      icon_template: mdi:water-percent
      value_template: "{{ states('sensor.washroom_multisensor_relative_humidity') | round }}"

    washroom_temperature_exact:
      friendly_name: Washroom Temperature Exact
      unit_of_measurement: '°C'
      icon_template: mdi:thermometer
      value_template: "{{ states('sensor.washroom_multisensor_temperature') }}"

    washroom_temperature:
      friendly_name: Washroom Temperature
      unit_of_measurement: '°C'
      icon_template: mdi:thermometer
      value_template: "{{ states('sensor.washroom_multisensor_temperature') | round }}"

    washroom_luminance:
      friendly_name: Washroom Luminance
      unit_of_measurement: 'lx'
      icon_template: mdi:blur
      value_template: "{{ states('sensor.washroom_multisensor_luminance') | round }}"

    washroom_luminance_friendly:
      friendly_name: Washroom Luminance
      icon_template: mdi:blur
      value_template: >-
        {% set lx = states('sensor.washroom_multisensor_luminance') | int(-1) %}

        {% if lx < 0 %}
          unknown
        {% elif 0 <= lx <= 10 %}
          Dark
        {% elif 11 <= lx <= 400 %}
          Dim
        {% elif 401 <= lx <= 1000 %}
          Normal
        {% elif 1001 <= lx <= 5000 %}
          Bright
        {% elif 5001 <= lx %}
          Outdoors
        {% else %}
          N/A
        {% endif %}

- platform: filter
  name: Washroom Humidity Filtered
  entity_id: sensor.washroom_humidity_exact
  filters:
    - filter: outlier
      window_size: 4
      radius: 4.0
    - filter: lowpass
      time_constant: 10
      precision: 1

- platform: filter
  name: Washroom Temperature Filtered
  entity_id: sensor.washroom_temperature_exact
  filters:
    - filter: outlier
      window_size: 4
      radius: 2.0
    - filter: lowpass
      time_constant: 10
    - filter: time_simple_moving_average
      window_size: 00:05
      precision: 2


#
# Average temperature
#
# The appartment being mostly open plan, one can calculate an average
# temperature value between calibrated sensors set in different rooms.
#
# Uses the current reading because temperature changes are readily felt.
#
- platform: min_max
  name: Average Temperature Exact
  type: mean
  round_digits: 0
  entity_ids:
    - sensor.bedroom_temperature_exact
    - sensor.lounge_temperature_exact

- platform: template
  sensors:
    average_temperature:
      friendly_name: Temperature
      unit_of_measurement: '°C'
      icon_template: mdi:thermometer
      value_template: "{{ states('sensor.average_temperature_exact') | round }}"


#
# Average humidity
#
# The appartment being mostly open plan, one can calculate an average humidity
# value between calibrated sensors set in different rooms.
#
# Uses the filtered reading because humidity hikes and drops can happen rapidly
# but their real effect is smoothed over time due to humidity absorption and
# release of furniture, fabrics and building materials.
#
- platform: min_max
  name: Average Humidity Exact
  type: mean
  round_digits: 1
  entity_ids:
    - sensor.bedroom_humidity_filtered
    - sensor.lounge_humidity_filtered

- platform: template
  sensors:
    average_humidity:
      friendly_name: Humidity
      unit_of_measurement: '%'
      icon_template: mdi:water-percent
      value_template: "{{ states('sensor.average_humidity_exact') | round }}"

- platform: template
  sensors:
    average_humidity_friendly:
      friendly_name: Humidity
      icon_template: mdi:water-percent
      value_template: >-
        {% set humidity = states('sensor.average_humidity') | int %}

        {% if humidity > 90 %}
          Mold imminent
        {% elif humidity > 70 %}
          Mold alert
        {% elif humidity > 55 %}
          Mold warning
        {% elif humidity > 50 %}
          OK-High
        {% elif humidity > 35 %}
          OK
        {% elif humidity >= 30 %}
          OK-Low
        {% else %}
          Too dry
        {% endif %}
