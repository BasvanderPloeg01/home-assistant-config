#
# Automations
#
automation.daily_greeting:
  icon: mdi:human-greeting
automation.humidity_notify:
  icon: mdi:water-percent
automation.front_door_notify:
  icon: mdi:door-open
automation.go_to_sleep:
  icon: mdi:weather-night
automation.theme_auto:
  icon: mdi:theme-light-dark
automation.scene_daylight:
  icon: mdi:weather-sunny
automation.scene_gaming:
  icon: mdi:google-controller
automation.scene_romantic:
  icon: mdi:home-heart
automation.scene_select:
  icon: mdi:looks
automation.update_notify:
  icon: mdi:cloud-upload
automation.wake_up:
  icon: mdi:power


#
# Binary sensors
#
binary_sensor.flic_80e4da72e890:
  friendly_name: Flic white
binary_sensor.flic_80e4da737711:
  friendly_name: Flic blue
binary_sensor.lounge_multisensor_sensor:
  device_class: motion
  group:
    group.lounge:
      friendly_name: Motion


#
# Cameras
#
camera.environment_canada_rain:
  friendly_name: Rain
camera.environment_canada_snow:
  friendly_name: Snow
camera.noaa_geocolor:
  friendly_name: GeoColor
camera.noaa_water_vapour:
  friendly_name: Water Vapour


#
# Device trackers
#
device_tracker.cellphone_her:
  friendly_name: !secret nickname_her
  icon: mdi:cellphone-iphone
  extra_data_template:
    - >-
      ${entities['device_tracker.laptop_her'].attributes['friendly_name']} is
      ${entities['device_tracker.laptop_her'].state}.
device_tracker.cellphone_him:
  friendly_name: !secret nickname_him
  icon: mdi:cellphone-iphone
  extra_data_template:
    - >-
      ${entities['device_tracker.laptop_him'].attributes['friendly_name']} is
      ${entities['device_tracker.laptop_him'].state}.
device_tracker.laptop_her:
  friendly_name: Her laptop
  icon: mdi:laptop
device_tracker.laptop_him:
  friendly_name: His laptop
  icon: mdi:laptop


#
# Displays
#
display.kiosk:
  icon: mdi:tablet


#
# Groups
#
group.configuration_view:
  order: 5
group.default_view:
  order: 1
group.status_view:
  order: 4
group.switchboard_view:
  order: 2
group.weather_view:
  order: 3


#
# Input booleans
#
input_boolean.motion_detected:
  confirm_controls_show_lock: true
  templates:
    theme: >-
      return state == 'on' ? 'card-warning'
      : null;
input_boolean.tamper_detected:
  confirm_controls_show_lock: true
  templates:
    theme: >-
      return state == 'on' ? 'card-critical'
      : null;


#
# Input selectors
#
input_select.aurora_effect:
  icon: mdi:blank
input_select.bed_effect:
  friendly_name: Bed Effect
  icon: mdi:blank
input_select.ceiling_effect:
  friendly_name: Effect
  icon: mdi:blank
input_select.lightpack_effect:
  icon: mdi:blank


#
# Lights
#
light.aurora:
  extra_data_template: >-
    return (attributes.brightness) ?
    attributes.effect + ' @ ' +
    Math.round(attributes.brightness / 255 * 100) + '%'
    : null;
  icon: mdi:vector-triangle
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
  state_card_mode: break-slider
light.bedroom:
  extra_data_template: >-
    return (state === 'on' && entities['sensor.ceiling_effect_loaded'].state) ?
    entities['sensor.ceiling_effect_loaded'].state
    : null;
  icon: mdi:led-strip
  homebridge_hidden: false
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
light.countertop:
  extra_data_template: >-
    return (attributes.brightness) ?
    Math.round(1000000 / attributes.color_temp / 50) * 50 + ' K @ ' +
    Math.round(attributes.brightness / 255 * 100) + '%'
    : null;
  homebridge_hidden: false
  icon: mdi:border-top
  assumed_state: false
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
light.island:
  extra_data_template: >-
    return (attributes.brightness) ?
    Math.round(1000000 / attributes.color_temp / 50) * 50 + ' K @ ' +
    Math.round(attributes.brightness / 255 * 100) + '%'
    : null;
  homebridge_hidden: false
  icon: mdi:table-column
  assumed_state: false
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
light.headboard:
  extra_data_template: >-
    return (state === 'on' && entities['sensor.bed_effect_loaded'].state) ?
    entities['sensor.bed_effect_loaded'].state
    : null;
  icon: mdi:gate
  homebridge_hidden: false
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
light.lightpack:
  extra_data_template: >-
    return (state === 'on' && entities['sensor.lightpack_effect_loaded'].state) ?
    entities['sensor.lightpack_effect_loaded'].state
    : null;
  homebridge_hidden: false
  icon: mdi:television
light.lounge:
  extra_data_template: >-
    return (state === 'on' && entities['sensor.ceiling_effect_loaded'].state) ?
    entities['sensor.ceiling_effect_loaded'].state
    : null;
  homebridge_hidden: false
  icon: mdi:led-strip
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
light.microwave:
  extra_data_template: >-
    return (attributes.brightness) ?
    Math.round(1000000 / attributes.color_temp / 50) * 50 + ' K @ ' +
    Math.round(attributes.brightness / 255 * 100) + '%'
    : null;
  homebridge_hidden: false
  icon: mdi:gradient
  assumed_state: false
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
light.middle:
  extra_data_template: >-
    return (state === 'on' && entities['sensor.ceiling_effect_loaded'].state) ?
    entities['sensor.ceiling_effect_loaded'].state
    : null;
  homebridge_hidden: false
  icon: mdi:led-strip
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
light.shower:
  extra_data_template: >-
    return (attributes.brightness) ?
    Math.round(1000000 / attributes.color_temp / 50) * 50 + ' K @ ' +
    Math.round(attributes.brightness / 255 * 100) + '%'
    : null;
  icon: mdi:spotlight
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
  state_card_mode: break-slider
light.sink:
  extra_data_template: >-
    return (attributes.brightness) ?
    Math.round(1000000 / attributes.color_temp / 50) * 50 + ' K @ ' +
    Math.round(attributes.brightness / 255 * 100) + '%'
    : null;
  homebridge_hidden: false
  icon: mdi:water-pump
  assumed_state: false
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
light.spotlight:
  extra_data_template: >-
    return (attributes.brightness) ?
    Math.round(1000000 / attributes.color_temp / 50) * 50 + ' K @ ' +
    Math.round(attributes.brightness / 255 * 100) + '%'
    : null;
  icon: mdi:spotlight-beam
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false
  state_card_mode: break-slider
light.underbed:
  extra_data_template: >-
    return (state === 'on' && entities['sensor.bed_effect_loaded'].state) ?
    entities['sensor.bed_effect_loaded'].state
    : null;
  icon: mdi:hotel
  homebridge_hidden: false
  slider_theme:
    max: 255
    min: 0
    off_when_min: true
    pin: true
    report_when_not_changed: false


#
# Sensors: Miscellaneous
#
sensor.bing_wallpaper:
  custom_ui_state_card: state-card-value_only
sensor.good_vibes:
  custom_ui_state_card: state-card-value_only
sensor.doors_status:
  templates:
    theme: >-
      return state != 'Closed' ? 'card-warning'
      : null;
sensor.tamper_status:
  templates:
    theme: >-
      return state != 'OK'
      ? entities['input_boolean.tamper_detected'].state == 'on' ? 'card-critical'
      : 'card-warning'
      : null;
sensor.motion_status:
  templates:
    theme: >-
      return state != 'OK' ? 'card-warning'
      : null;


#
# Sensors: Climate
#
sensor.average_humidity:
  group:
    group.humidity:
      friendly_name: Average
sensor.average_humidity_friendly:
  extra_badge:
    entity_id: sensor.average_humidity
  templates:
    theme: >-
      var v = parseInt(entities['sensor.average_humidity'].state);
      return v > 55 || v < 30 ? 'card-critical'
      : v > 50 || v < 35 ? 'card-warning'
      : null;
sensor.average_temperature:
  group:
    group.temperature:
      friendly_name: Average
sensor.bedroom_humidity:
  homebridge_hidden: false
  icon: mdi:water-percent
  group:
    group.bedroom:
      friendly_name: Humidity
    group.humidity:
      friendly_name: Bedroom
      icon: mdi:hotel
sensor.bedroom_temperature:
  homebridge_hidden: false
  icon: mdi:thermometer
  group:
    group.bedroom:
      friendly_name: Temperature
    group.temperature:
      friendly_name: Bedroom
      icon: mdi:hotel
sensor.lounge_humidity:
  homebridge_hidden: false
  icon: mdi:water-percent
  group:
    group.lounge:
      friendly_name: Humidity
    group.humidity:
      friendly_name: Lounge
      icon: mdi:sofa
sensor.lounge_temperature:
  homebridge_hidden: false
  icon: mdi:thermometer
  group:
    group.lounge:
      friendly_name: Temperature
    group.temperature:
      friendly_name: Lounge
      icon: mdi:sofa


#
# Sensors: Outdoor Life Quality
#
sensor.aqi_carbon_monoxide_friendly:
  extra_data_template: >-
    return entities['sensor.aqi_carbon_monoxide'].state != 'unknown' ?
    entities['sensor.aqi_carbon_monoxide'].state + ' ' +
    entities['sensor.aqi_carbon_monoxide'].attributes['unit_of_measurement']
    : null;
  templates:
    theme: >-
      var v = parseInt(entities['sensor.aqi_carbon_monoxide'].state);
      return v > 100 ? 'card-critical'
      : v > 50 ? 'card-warning'
      : null;
sensor.aqi_friendly:
  extra_badge:
    entity_id: sensor.aqi
  templates:
    theme: >-
      var v = parseInt(entities['sensor.aqi'].state);
      return v > 100 ? 'card-critical'
      : v > 50 ? 'card-warning'
      : null;
sensor.aqi_nitrogen_dioxide_friendly:
  extra_data_template: >-
    return entities['sensor.aqi_nitrogen_dioxide'].state != 'unknown' ?
    entities['sensor.aqi_nitrogen_dioxide'].state + ' ' +
    entities['sensor.aqi_nitrogen_dioxide'].attributes['unit_of_measurement']
    : null;
  templates:
    theme: >-
      var v = parseInt(entities['sensor.aqi_nitrogen_dioxide'].state);
      return v > 100 ? 'card-critical'
      : v > 50 ? 'card-warning'
      : null;
sensor.aqi_ozone_friendly:
  extra_data_template: >-
    return entities['sensor.aqi_ozone'].state != 'unknown' ?
    entities['sensor.aqi_ozone'].state + ' ' +
    entities['sensor.aqi_ozone'].attributes['unit_of_measurement']
    : null;
  templates:
    theme: >-
      var v = parseInt(entities['sensor.aqi_ozone'].state);
      return v > 100 ? 'card-critical'
      : v > 50 ? 'card-warning'
      : null;
sensor.aqi_particles_friendly:
  extra_data_template: >-
    return entities['sensor.aqi_particles'].state != 'unknown' ?
    entities['sensor.aqi_particles'].state + ' ' +
    entities['sensor.aqi_particles'].attributes['unit_of_measurement']
    : null;
  templates:
    theme: >-
      var v = parseInt(entities['sensor.aqi_particles'].state);
      return v > 100 ? 'card-critical'
      : v > 50 ? 'card-warning'
      : null;
sensor.aqi_sulphur_dioxide_friendly:
  extra_data_template: >-
    return entities['sensor.aqi_sulphur_dioxide'].state != 'unknown' ?
    entities['sensor.aqi_sulphur_dioxide'].state + ' ' +
    entities['sensor.aqi_sulphur_dioxide'].attributes['unit_of_measurement']
    : null;
  templates:
    theme: >-
      var v = parseInt(entities['sensor.aqi_sulphur_dioxide'].state);
      return v > 100 ? 'card-critical'
      : v > 50 ? 'card-warning'
      : null;
sensor.uv_friendly:
  extra_badge:
    entity_id: sensor.uv
  templates:
    theme: >-
      var v = parseInt(entities['sensor.uv'].state);
      return v >= 6 ? 'card-critical'
      : v >= 3 ? 'card-warning'
      : null;

#
# Sensors: Power
#
sensor.bedroom_multisensor_battery:
  group:
    group.battery:
      friendly_name: Bedroom
      icon: mdi:hotel
    group.bedroom:
      friendly_name: Multisensor Battery
sensor.front_door_sensor_battery:
  group:
    group.battery:
      friendly_name: Front Door
      icon: mdi:door
    group.kitchen:
      friendly_name: Front Door Battery
sensor.kiosk_battery:
  group:
    group.battery:
      friendly_name: Kiosk
      icon: mdi:tablet
    group.kitchen:
      friendly_name: Kiosk Battery
sensor.lounge_multisensor_battery:
  group:
    group.battery:
      friendly_name: Lounge
      icon: mdi:sofa
    group.lounge:
      friendly_name: Multisensor Battery


#
# Sensors: System
#
sensor.processor_use:
  friendly_name: CPU Load
  icon: mdi:chip
  extra_data_template: >-
    return
    entities['sensor.average_load'].state + ' ' +
    '(' + entities['sensor.cpu_cores'].state + ' cores)';
sensor.disk_use_percent:
  extra_data_template: >-
    return
    Math.round(parseFloat(entities['sensor.disk_free_home'].state)) + ' ' +
    entities['sensor.disk_free_home'].attributes['unit_of_measurement'] +
    ' available';
sensor.ebox_download_before_offpeak:
  homebridge_hidden: false
  friendly_name: Downloads
sensor.ebox_upload_before_offpeak:
  homebridge_hidden: false
  friendly_name: Uploads
sensor.ebox_usage:
  homebridge_hidden: false
  friendly_name: Monthly usage
sensor.ipv4_address_eth0:
  friendly_name: Local IP Address
sensor.memory_use_percent:
  extra_data_template: >-
    return
    Math.round(parseFloat(entities['sensor.memory_free'].state)) + ' ' +
    entities['sensor.memory_free'].attributes['unit_of_measurement'] +
    ' available';
sensor.speedtest_download:
  friendly_name: Downspeed
  icon: mdi:download-network
  show_last_changed: true
sensor.speedtest_ping:
  friendly_name: Ping
  icon: mdi:timer
  show_last_changed: true
sensor.speedtest_upload:
  friendly_name: Upspeed
  icon: mdi:upload-network
  show_last_changed: true
sensor.uptime_os:
  icon: mdi:pi


#
# Sensors: Transit
#
sensor.home_to_market_hour:
  icon: mdi:cart
  extra_badge:
    entity_id: sensor.home_to_market
  templates:
    theme: >-
      var v = parseInt(entities['sensor.home_to_market'].state);
      return v <= 5 ? 'card-critical'
      : v <= 10 ? 'card-warning'
      : null;
sensor.home_to_market_2_hour:
  icon: mdi:blank
  friendly_name: Next
  extra_badge:
    entity_id: sensor.home_to_market_2_countdown
sensor.home_to_market_3_hour:
  icon: mdi:blank
  friendly_name: After
  extra_badge:
    entity_id: sensor.home_to_market_3_countdown
sensor.home_to_metro_hour:
  extra_badge:
    entity_id: sensor.home_to_metro
  templates:
    theme: >-
      var v = parseInt(entities['sensor.home_to_metro'].state);
      return v <= 5 ? 'card-critical'
      : v <= 10 ? 'card-warning'
      : null;
sensor.home_to_metro_2_hour:
  icon: mdi:blank
  friendly_name: Next
  extra_badge:
    entity_id: sensor.home_to_metro_2_countdown
sensor.home_to_metro_3_hour:
  icon: mdi:blank
  friendly_name: After
  extra_badge:
    entity_id: sensor.home_to_metro_3_countdown


#
# Sensors: Weather
#
sensor.dark_sky_minutely_summary:
  custom_ui_state_card: state-card-value_only
sensor.dark_sky_daily_summary:
  friendly_name: Weekly Forecast
  hide_control: true
  custom_ui_state_card: state-card-value_only
sensor.dark_sky_hourly_summary:
  friendly_name: 24h Summary
  custom_ui_state_card: state-card-value_only
sensor.dark_sky_summary:
  friendly_name: " "
  extra_data_template: >-
    ${entities['sensor.outside_temperature'].state}${entities['sensor.outside_temperature'].attributes['unit_of_measurement']}
  theme: card-secondary-title
sensor.weather_details:
  custom_ui_state_card: state-card-value_only
sensor.wind_speed:
  extra_badge:
    entity_id: sensor.wind_bearing_cardinal
  templates:
    theme: >-
      var v = parseInt(state);
      return v >= 89 ? 'card-critical'
      : v >= 39 ? 'card-warning'
      : null;

#
# Scenes
#
scene.romantic:
  icon: mdi:heart
scene.shutdown:
  icon: mdi:power


#
# Scripts
#
script.wake_up:
  icon: mdi:weather-sunny


#
# Switches
#
switch.bedroom_fan:
  homebridge_hidden: false
  icon: mdi:fan
  group:
    group.bedroom:
      friendly_name: Fan
switch.bedside_light:
  homebridge_hidden: false
  icon: mdi:creation
switch.dehumidifier:
  homebridge_hidden: false
  icon: mdi:water-off
  confirm_controls_show_lock: true
switch.nightstand_light:
  homebridge_hidden: false
  icon: mdi:page-layout-body
switch.souvenirs_light:
  homebridge_hidden: false
  friendly_name: Souvenirs Light
  icon: mdi:trophy
switch.window_light:
  homebridge_hidden: false
  icon: mdi:creation


#
# Updater
#
updater.updater:
  custom_ui_state_card: state-card-custom-ui
  extra_data_template: >-
    Current version: ${entities['sensor.current_version'].state}


#
# Variables
#
variable.tamper_detected:
  friendly_name: Tamper location
  icon: mdi:security-home
  templates:
    theme: >-
      return state != 'False'
      ? entities['input_boolean.tamper_detected'].state == 'on' ? 'card-critical'
      : 'card-warning'
      : null;
